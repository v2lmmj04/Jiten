services:
  postgres:
    build:
      context: ./postgres-pgroonga
      dockerfile: Dockerfile
      args:
        PG_VERSION: 17
    image: jiten/postgres-pgroonga:17
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_MULTIPLE_DATABASES: ${DB_NAME},umami
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Jiten.Api/Dockerfile
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__JitenDatabase=Host=${DB_HOST:-postgres};Database=${DB_NAME:-jiten};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-password};Timeout=300;CommandTimeout=300
      - ConnectionStrings__Redis=redis:${REDIS_PORT:-6379}
      - JwtSettings_Secret=${JWT_SECRET:-VERY_STRONG_KEY_AT_LEAST_32_CHARS}
      - JwtSettings_Issuer=${JWT_ISSUER:-https://api.jiten.moe}
      - JwtSettings_Audience=${JWT_AUDIENCE:-https://jiten.moe}
      - JwtSettings_AccessTokenExpirationMinutes=${JWT_ACCESS_TOKEN_EXPIRATION_MINUTES:-15}
      - JwtSettings_RefreshTokenExpirationDays=${JWT_REFRESH_TOKEN_EXPIRATION_DAYS:-30}
      - StaticFilesPath=${STATIC_FILES_PATH:-/app/uploads}
      - UseBunnyCdn=${USE_BUNNYCDN:-false}
      - BunnyCdnSecret=${BUNNYCDN_SECRET:-}
      - BunnyCdnStorageZone=${BUNNYCDN_STORAGE_ZONE:-}
      - CdnBaseUrl=${CDN_BASE_URL:-}
      - DictionaryPath=${DICTIONARY_PATH:-/path/to/system_full.dic}
      - JimakuApiKey=${JIMAKU_API_KEY:-}
      - TmdbApiKey=${TMDB_API_KEY:-}
      - DOTNET_ENVIRONMENT=${DOTNET_ENVIRONMENT:-}
      - StoreRawText=${STORE_RAW_TEXT:-false}
      - IgdbClientId=${IGDB_CLIENT_ID:-}
      - IgdbClientSecret=${IGDB_CLIENT_SECRET:-}
      - Google_ClientId=${GOOGLE_CLIENT_ID:-}
      - Google_ClientSecret=${GOOGLE_CLIENT_SECRET:-}
      - Google_RecapatchaSecret=${GOOGLE_RECAPTCHA_SECRET:-}
      - Email_SmtpHost=${SES_SMTP_HOST:-smtp.eu.mailgun.org}
      - Email_SmtpPort=${SES_SMTP_PORT:-587}
      - Email_Username=${SES_SMTP_USER:-}
      - Email_Password=${SES_SMTP_PASSWORD:-}
      - Email_From=${SES_FROM:-noreply@example.com}
    volumes:
      - ./Shared:/app/Shared:ro
      - uploads:/app/uploads
      - dictionaries:/app/dictionaries
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.jiten.moe`)"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  web:
    build:
      context: .
      dockerfile: Jiten.Web/Dockerfile
      args:
        - NUXT_PUBLIC_SCRIPTS_UMAMI_ANALYTICS_WEBSITE_ID=${UMAMI_ANALYTICS_WEBSITE_ID:-}
        - NUXT_PUBLIC_SCRIPTS_UMAMI_ANALYTICS_HOST_URL=${UMAMI_ANALYTICS_HOST_URL:-https://umami.jiten.moe}
        - NUXT_PUBLIC_BASE_URL=${API_BASE_URL:-https://api.jiten.moe}
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - NUXT_PUBLIC_BASE_URL=${API_BASE_URL:-https://api.jiten.moe}
      - NUXT_PUBLIC_SCRIPTS_UMAMI_ANALYTICS_WEBSITE_ID=${UMAMI_ANALYTICS_WEBSITE_ID:-}
      - NUXT_PUBLIC_SCRIPTS_UMAMI_ANALYTICS_HOST_URL=${UMAMI_ANALYTICS_HOST_URL:-https://umami.jiten.moe}
      - NUXT_PUBLIC_GOOGLE_SIGNIN_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - NUXT_PUBLIC_RECAPTCHA_V2_SITE_KEY=${GOOGLE_RECAPTCHA_V2_SITE_KEY:-}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`jiten.moe`)"

  umami:
    image: docker.umami.is/umami-software/umami:postgresql-latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://umami:umami@postgres:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ${UMAMI_APP_SECRET:-replace-me-with-a-random-string}
      HASH_SALT: ${UMAMI_HASH_SALT:-some-random-string}
      PORT: 3005
      TRACKER_SCRIPT_NAME: ${UMAMI_TRACKER_SCRIPT_NAME:-umm.js}
    init: true
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:3005/api/heartbeat || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.umami.rule=Host(`umami.jiten.moe`)"
      - "traefik.http.services.umami.loadbalancer.server.port=3005"

  redis:
    image: redis:latest
    command: ["redis-server", "--maxmemory", "${REDIS_MAX_MEMORY:-2}gb", "--maxmemory-policy", "allkeys-lru"]

volumes:
  postgres_data:
  uploads:
  dictionaries:
